{"version":3,"sources":["redux/taskActions.js","components/AddTask/index.js","components/Task/index.js","components/ScrollOver/index.js","components/TaskList/index.js","redux/settingsActions.js","components/Toolbar/index.js","App.js","redux/taskReducer.js","redux/settingsReducer.js","redux/index.js","index.js"],"names":["ADD_TASK","REMOVE_TASK","CHANGE_TASK_STATUS","IN_PROCESS_TASK","DONE_TASK","AddTaskContent","styled","display","padding","alignItems","TextWrapper","margin","textAlign","color","AddTaskWrapper","Button","width","textTransform","justifyContent","paddingLeft","AddTaskFormWrapper","background","AddTaskFormContent","flex","TextFieldWrapper","justify","marginTop","withLabel","DoneButton","alignSelf","AddTaskFrom","addTask","onFocus","onBlur","useState","taskName","$taskName","lengthLimitError","$lengthLimitError","style","TextField","autoFocus","onChange","value","target","length","label","error","onClick","connect","dispatch","type","payload","showForm","$showForm","Divider","state","TaskContent","TaskName","textDecoration","lineThrough","TaskContentWrapper","TaskWrapper","RemoveTask","DoneTask","InProcessTask","Task","status","changeTaskStatus","removeTask","rest","ScrollOver","scrolledContainer","scrolledWrapper","$scrolledContainer","$scrolledWrapper","scrolled","$scrolled","scrollOverRef","$srollOverRef","useEffect","parentNode","scrollEvent","requestAnimationFrame","Math","floor","scrollTop","addEventListener","removeEventListener","height","clientHeight","overflow","scrollHeight","divider","ref","position","right","top","AutoScrollOver","children","TaskListItemWrapper","Wrapper","flexDirection","ListWrapper","maxHeight","overflowY","scrollbarWidth","id","list","Grid","container","direction","map","props","i","item","SEL_FILTER_VALUE","ToolbarWrapper","Paper","borderRadius","LeftWrapper","RightWrapper","ToolbarLabel","Typography","DateWrapper","FitlerButton","paddingRight","minWidth","FilterInfoLabel","taskList","tasks","filterBy","settings","completedTaskCount","filter","el","currentTaskCount","setFilterValue","anchorFilterMenu","$anchorFilterMenu","handleCloseMenu","e","undefined","FilterMenu","Menu","anchorEl","keepMounted","open","Boolean","onClose","MenuItem","FilterInfo","variant","dayjs","format","size","TaskListWrapper","ContentWrapper","Container","maxWidth","taskReducer","nanoid","task","find","settingsReducer","initState","store","createStore","combineReducers","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b45db411.chunk.js","sourcesContent":["export const ADD_TASK = 'ADD_TASK';\r\nexport const REMOVE_TASK = 'REMOVE_TASK';\r\nexport const CHANGE_TASK_STATUS = 'CHANGE_TASK_STATUS';\r\nexport const IN_PROCESS_TASK = 'IN_PROCESS_TASK';\r\nexport const DONE_TASK = 'DONE_TASK';\r\nexport const EDITING = 'EDITING';\r\n\r\nexport const addTask = ({ taskName }) => {\r\n  return { \r\n    type: ADD_TASK,\r\n    payload: { taskName }\r\n  };\r\n};\r\n\r\nexport const removeTask = (id) => {\r\n  return {\r\n    type: REMOVE_TASK,\r\n    payload: { id }\r\n  };\r\n};\r\n\r\nexport const changeTaskStatus = (id) => {\r\n  return {\r\n    type: CHANGE_TASK_STATUS,\r\n    payload: { id }\r\n  };\r\n};\r\n\r\n","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Button from '@material-ui/core/Button';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport RadioButtonUncheckedIcon from '@material-ui/icons/RadioButtonUnchecked';\r\nimport DoneOutlinedIcon from '@material-ui/icons/DoneOutlined';\r\nimport CloseOutlinedIcon from '@material-ui/icons/CloseOutlined';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { styled } from '@material-ui/styles';\r\nimport { addTask } from '../../redux/taskActions';\r\n\r\nconst TASK_NAME_CHAR_LIMIT = 10;\r\nconst MIN_TASK_NAME = 2;\r\n\r\nconst AddTaskContent = styled('div')({\r\n  display: 'flex',\r\n  padding: '8px 0 8px 0',\r\n  alignItems: 'center',\r\n});\r\n\r\nconst TextWrapper = styled('div')({\r\n  margin: '0 0 0 12px',\r\n  textAlign: 'left',\r\n  color: '#3f51b5'\r\n});\r\n\r\nconst AddTaskWrapper = styled(Button)(() => ({\r\n  width: '100%',\r\n  textTransform: 'none',\r\n  justifyContent: 'left',\r\n  paddingLeft: '14px'\r\n}));\r\n\r\nconst AddTaskFormWrapper = styled('div')({  \r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  background: '#FFF',\r\n  paddingLeft: '6px'\r\n})\r\n\r\nconst AddTaskFormContent = styled('div')({\r\n  padding: '16px 0 16px 8px',\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  flex: 1\r\n})\r\n\r\nconst TextFieldWrapper = styled(TextWrapper)(({ withLabel }) => ({\r\n  width: '100%',\r\n  flex: 1,\r\n  display: 'flex',\r\n  justify: 'space-between',\r\n  marginTop: withLabel ? '-16px' : 0,\r\n  '& div': {\r\n    flex: 1\r\n  }\r\n}))\r\n\r\nconst DoneButton = styled('div')({\r\n  display: 'flex',\r\n  alignSelf: 'stretch',\r\n  margin: '0 0 0 16px'\r\n})\r\n\r\nconst AddTaskFrom = ({ addTask, onFocus, onBlur }) => {\r\n  const [taskName, $taskName] = useState('');\r\n  const [lengthLimitError, $lengthLimitError] = useState(false);\r\n\r\n  return (\r\n    <AddTaskFormWrapper>\r\n      <AddTaskFormContent>\r\n        <RadioButtonUncheckedIcon style={{ color: '#9d9d9d' }} />\r\n        <TextFieldWrapper withLabel={lengthLimitError}>\r\n          <TextField \r\n            autoFocus \r\n            onChange={({ target: { value }}) => {\r\n              if (value.length <= TASK_NAME_CHAR_LIMIT) {\r\n                $lengthLimitError(false);\r\n              } else {\r\n                $lengthLimitError(true);\r\n              }\r\n              $taskName(value);\r\n            }}\r\n            label={lengthLimitError ? `Length range >${MIN_TASK_NAME} and <${TASK_NAME_CHAR_LIMIT}` : ''}\r\n            error={lengthLimitError}\r\n          />\r\n        </TextFieldWrapper>\r\n      </AddTaskFormContent>\r\n      <DoneButton onClick={() => {\r\n        if (taskName.length < MIN_TASK_NAME || taskName.length > TASK_NAME_CHAR_LIMIT) {\r\n          $lengthLimitError(true);\r\n        } else {\r\n          addTask(taskName)\r\n        }}}\r\n      >\r\n        <Button>\r\n          <DoneOutlinedIcon style={{ color: '#9d9d9d' }} />\r\n        </Button>\r\n      </DoneButton>\r\n    </AddTaskFormWrapper>\r\n\r\n  )\r\n}\r\n\r\nconst AddTask = ({ addTask }) => {\r\n  const [showForm, $showForm] = useState();\r\n\r\n  return (\r\n    <>\r\n    <Divider />\r\n      {showForm ? \r\n        <AddTaskFrom \r\n          addTask={(taskName) => $showForm(false) || addTask(taskName)} \r\n        />\r\n       : null}\r\n      <Divider />\r\n      <AddTaskWrapper onClick={() => $showForm((state) => !state)}>\r\n        <AddTaskContent>\r\n          {showForm ? (\r\n            <>\r\n              <CloseOutlinedIcon color='primary' />\r\n              <TextWrapper>Close</TextWrapper>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <AddIcon color='primary'/>\r\n              <TextWrapper>Add a task</TextWrapper>\r\n            </>\r\n          )}\r\n        </AddTaskContent>\r\n      </AddTaskWrapper>\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  addTask: (taskName) => dispatch(addTask({ taskName }))\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(AddTask);\r\n","import React from 'react';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport RadioButtonUncheckedIcon from '@material-ui/icons/RadioButtonUnchecked';\r\nimport DeleteOutlineOutlinedIcon from '@material-ui/icons/DeleteOutlineOutlined';\r\nimport Button from '@material-ui/core/Button';\r\nimport { styled } from '@material-ui/styles';\r\nimport { DONE_TASK } from '../../redux/taskActions';\r\n\r\nconst TaskContent = styled('div')({\r\n  display: 'flex',\r\n  padding: '8px 0 8px 0',\r\n  alignItems: 'center',\r\n});\r\n\r\nconst TaskName = styled('div')(({ lineThrough }) => ({\r\n  textDecoration: lineThrough ? 'line-through' : 'inherit',\r\n  margin: '0 0 0 12px',\r\n  textAlign: 'left'\r\n}))\r\n\r\nconst TaskContentWrapper = styled(Button)(() => ({\r\n  width: '100%',\r\n  textTransform: 'none',\r\n  justifyContent: 'left',\r\n  paddingLeft: '14px'\r\n}));\r\n\r\nconst TaskWrapper = styled('div')({\r\n  display: 'flex',\r\n})\r\n\r\nconst RemoveTask = styled(Button)({\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n})\r\n\r\nconst DoneTask = ({ taskName }) => {\r\n  return (\r\n    <TaskContent>\r\n      <CheckCircleIcon style={{ color: '#6ab200' }}/>\r\n      <TaskName lineThrough>{taskName}</TaskName>\r\n    </TaskContent>\r\n  )\r\n}\r\n\r\nconst InProcessTask = ({ taskName }) => {\r\n  return (\r\n    <TaskContent>\r\n      <RadioButtonUncheckedIcon style={{ color: '#9d9d9d' }} />\r\n      <TaskName>{taskName}</TaskName>\r\n    </TaskContent>\r\n  )\r\n}\r\n\r\nconst Task = ({ status, changeTaskStatus, removeTask, state, ...rest }) => {\r\n  return (\r\n    <TaskWrapper>\r\n      <TaskContentWrapper onClick={changeTaskStatus}>\r\n        {status === DONE_TASK ? \r\n          <DoneTask status={status} {...rest} />   \r\n          : <InProcessTask status={status} {...rest} />}\r\n      </TaskContentWrapper>\r\n      <RemoveTask onClick={removeTask}>\r\n        <DeleteOutlineOutlinedIcon style={{ color: '#9d9d9d' }}/>\r\n      </RemoveTask>\r\n    </TaskWrapper>\r\n  );\r\n}\r\n\r\nexport default Task;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nconst ScrollOver = ({ scrolledContainer: _scrolledContainer, scrolledWrapper: _scrolledWrapper }) => {\r\n  const [scrolledContainer, $scrolledContainer] = useState();\r\n  const [scrolledWrapper, $scrolledWrapper] = useState();\r\n  const [scrolled, $scrolled] = useState();\r\n  const [scrollOverRef, $srollOverRef] = useState();\r\n\r\n  useEffect(() => {\r\n    if (scrollOverRef) {\r\n      const scrolledContainer = scrollOverRef.parentNode;\r\n      const scrolledWrapper = scrolledContainer.parentNode;\r\n\r\n      // setTimeout(() => scrollOverRef.style.height = `${scrolledWrapper.clientHeight}px`)\r\n      $scrolledContainer(scrolledContainer);\r\n      $scrolledWrapper(scrolledWrapper);\r\n    }\r\n\r\n  }, [scrollOverRef]);\r\n\r\n  useEffect(() => {\r\n    const scrollEvent = () => {\r\n      requestAnimationFrame(() => $scrolled(Math.floor(scrolledWrapper.scrollTop)));\r\n    }\r\n    \r\n    if (scrolledContainer && scrolledWrapper) {\r\n      scrollEvent();\r\n      scrolledWrapper.addEventListener('scroll', scrollEvent);\r\n    }\r\n\r\n    return () => {\r\n      if (scrolledContainer) {\r\n        scrolledWrapper.removeEventListener('scroll', scrollEvent);\r\n      }\r\n    }\r\n  }, [scrolledContainer])\r\n\r\n  useEffect(() => {\r\n    if (scrollOverRef) {\r\n      scrollOverRef.style.height = `${scrolledWrapper.clientHeight}px`;\r\n    }\r\n  }, [scrolledWrapper?.height])\r\n\r\n  const overflow = scrolledContainer?.scrollHeight !== scrolledWrapper?.clientHeight;\r\n  const divider = scrolledContainer?.clientHeight / scrolledWrapper?.clientHeight;\r\n\r\n  return (\r\n    <>\r\n      <div \r\n        ref={ref => $srollOverRef(ref)}\r\n        style={{ \r\n          position: 'absolute', \r\n          right: '0px',\r\n          top: scrolled,\r\n          width: '20px', \r\n          height: '0%',\r\n          display: scrollOverRef && overflow ? 'flex' : 'none',\r\n        }}\r\n      >\r\n        {scrollOverRef ? (\r\n          <div \r\n            style={{ \r\n              position: 'absolute', \r\n              width: '8px', \r\n              right: '0px',\r\n              height: `${scrolledWrapper?.clientHeight / divider - 12}px`, \r\n              top: scrolled / divider,\r\n              background: '#d6dee1',\r\n              'border-radius': '20px',\r\n              margin: '6px 0'\r\n            }}\r\n          />) : null} \r\n      </div>\r\n    </>\r\n  )\r\n};\r\n\r\nexport const AutoScrollOver = ({ children }) => {\r\n  return (\r\n    <div style={{ position: 'relative' }}>\r\n      {children}\r\n      <ScrollOver />\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default ScrollOver;\r\n","import React from 'react';\r\nimport AddTask from '../AddTask';\r\nimport Task from '../Task';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { connect } from 'react-redux';\r\nimport { changeTaskStatus, removeTask } from '../../redux/taskActions';\r\nimport ScrollOver, { AutoScrollOver } from '../ScrollOver';\r\n\r\nimport { styled } from '@material-ui/styles';\r\n\r\nconst TaskListItemWrapper = styled('div')(() => ({\r\n  background: '#FFF',\r\n}));\r\n\r\nconst Wrapper = styled('div')({\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n})\r\n\r\nconst ListWrapper = styled('div')({\r\n  maxHeight: '60vh',\r\n  overflowY: 'auto',\r\n  '&::-webkit-scrollbar': {\r\n    display: 'none'\r\n  },\r\n  scrollbarWidth: 'none'\r\n})\r\n\r\nconst TaskList = ({ list = [], changeTaskStatus, removeTask }) => {\r\n  return (\r\n    <Wrapper>\r\n      <ListWrapper>\r\n        <AutoScrollOver>\r\n          <Grid container direction='column'>\r\n            {list.map((props, i) => (\r\n              <Grid item>\r\n                <TaskListItemWrapper>\r\n                  <Task \r\n                    key={props.id} \r\n                    {...props} \r\n                    changeTaskStatus={() => changeTaskStatus(props.id)}\r\n                    removeTask={() => removeTask(props.id)}\r\n                  />\r\n                  {i < list.length - 1 ? <Divider /> : null}\r\n                </TaskListItemWrapper>\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        </AutoScrollOver>\r\n      </ListWrapper>\r\n      <AddTask />\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    changeTaskStatus: (id) => dispatch(changeTaskStatus(id)),\r\n    removeTask: (id) => dispatch(removeTask(id))\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(TaskList);\r\n","export const ALL = 1;\r\nexport const COMPLETED = 2;\r\nexport const CURRENT = 3;\r\nexport const SEL_FILTER_VALUE = 'SEL_FILTER_VALUE';\r\n\r\nexport const setFilterValue = (value) => {\r\n  return {\r\n    type: SEL_FILTER_VALUE,\r\n    payload: value\r\n  };\r\n};\r\n","import React, { useState } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { styled } from '@material-ui/styles';\r\nimport { connect } from 'react-redux';\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport dayjs from 'dayjs';\r\nimport { setFilterValue, ALL, COMPLETED, CURRENT } from '../../redux/settingsActions';\r\nimport { DONE_TASK, IN_PROCESS_TASK } from '../../redux/taskActions';\r\n\r\nconst ToolbarWrapper = styled(Paper)(() => ({\r\n  // background: '#3f51b5',\r\n  padding: '32px 8px 14px 14px',\r\n  borderRadius: '4px 4px 0 0',\r\n  display: 'flex',\r\n  background: 'linear-gradient(to right, #7360e7, #1d9eff)'\r\n}));\r\n\r\nconst LeftWrapper = styled('div')({\r\n  display: 'flex',\r\n  flexDirection: 'column'\r\n});\r\n\r\nconst RightWrapper = styled('div')({\r\n  display: 'flex',\r\n  flex: 1,\r\n  alignItems: 'flex-end',\r\n  justifyContent: 'flex-end',\r\n  // marginRight: '14px'\r\n});\r\n\r\nconst ToolbarLabel = styled(Typography)({\r\n  color: '#FFF'\r\n});\r\n\r\nconst DateWrapper = styled(Typography)({\r\n  color: '#FFF'\r\n});\r\n\r\nconst FitlerButton = styled(Button)({\r\n  paddingLeft: '0px',\r\n  paddingRight: '0px',\r\n  minWidth: '48px',\r\n  margin: '0 0 -4px 16px',\r\n});\r\n\r\nconst FilterInfoLabel = styled(Typography)({\r\n  color: '#FFF'\r\n})\r\n\r\nconst Toolbar = ({ filterBy, setFilterValue, completedTaskCount, currentTaskCount }) => {\r\n  const [anchorFilterMenu, $anchorFilterMenu] = useState();\r\n\r\n  const handleCloseMenu = (e) => {\r\n    if (e.target.value != undefined) setFilterValue(e.target.value);\r\n    $anchorFilterMenu(null);\r\n  }\r\n\r\n  const FilterMenu = () => {\r\n    return ( \r\n      <Menu\r\n        anchorEl={anchorFilterMenu}\r\n        keepMounted\r\n        open={Boolean(anchorFilterMenu)}\r\n        onClose={handleCloseMenu}\r\n      >\r\n        <MenuItem onClick={handleCloseMenu} value={ALL}>All</MenuItem>\r\n        <MenuItem onClick={handleCloseMenu} value={COMPLETED}>Completed</MenuItem>\r\n        <MenuItem onClick={handleCloseMenu} value={CURRENT}>Current</MenuItem>\r\n      </Menu>)\r\n  }\r\n\r\n  const FilterInfo = () => {\r\n    switch (filterBy) {\r\n      case ALL: {\r\n        return (\r\n          <FilterInfoLabel variant='body2'>\r\n            {completedTaskCount} / {completedTaskCount + currentTaskCount} — All tasks\r\n          </FilterInfoLabel>\r\n        )\r\n      }\r\n      case COMPLETED: {\r\n        return (\r\n          <FilterInfoLabel variant='body2'>\r\n            {completedTaskCount} — Completed tasks\r\n          </FilterInfoLabel>\r\n        )\r\n      }\r\n      case CURRENT: {\r\n        return (\r\n          <FilterInfoLabel variant='body2'>\r\n            {currentTaskCount} — Current tasks\r\n          </FilterInfoLabel>\r\n        )\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <ToolbarWrapper>\r\n      <FilterMenu />\r\n      <LeftWrapper>\r\n        <ToolbarLabel variant='h4'>TO DO</ToolbarLabel>\r\n        <DateWrapper variant='body2'>\r\n          {dayjs().format('dddd, MMMM D')}\r\n        </DateWrapper>\r\n      </LeftWrapper>\r\n      <RightWrapper>\r\n        <div>\r\n          <FilterInfo />\r\n        </div>\r\n        <FitlerButton size='small' onClick={(e) => $anchorFilterMenu(e.target)}>\r\n          <FilterListIcon style={{ color: '#FFF' }}/>\r\n        </FitlerButton>\r\n      </RightWrapper>      \r\n    </ToolbarWrapper>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = ({ tasks: { taskList }, settings: { filterBy } }) => ({\r\n  filterBy,\r\n  completedTaskCount: taskList.filter((el) => el.status === DONE_TASK).length,\r\n  currentTaskCount: taskList.filter((el) => el.status === IN_PROCESS_TASK).length,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  setFilterValue: (value) => dispatch(setFilterValue(value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Toolbar);\r\n","import React from 'react';\nimport Container from '@material-ui/core/Container';\nimport Paper from '@material-ui/core/Paper';\nimport { TaskList, Toolbar } from './components';\nimport { styled } from '@material-ui/styles';\nimport { connect } from 'react-redux';\nimport { ALL, COMPLETED, CURRENT } from './redux/settingsActions';\nimport { DONE_TASK, IN_PROCESS_TASK } from './redux/taskActions';\n\nconst TaskListWrapper = styled(Paper)(() => ({\n  background: 'inherit',\n  display: 'flex',\n  flexDirection: 'column',\n  overflowY: 'hidden',\n}));\n\nconst ContentWrapper = styled(Container)({\n  marginTop: '5vh',\n  // overflowY: 'auto',\n  display: 'flex',\n  flexDirection: 'column'\n})\n\nconst Wrapper = styled('div')({\n  height: '100vh',\n  display: 'flex',\n  overflow: 'hidden',\n})\n\nconst App = ({ taskList }) => {\n  return (\n    <Wrapper>\n      <ContentWrapper maxWidth=\"sm\">\n        <Toolbar />\n        <TaskListWrapper>\n          <TaskList list={taskList} />\n        </TaskListWrapper>\n      </ContentWrapper>\n    </Wrapper>\n  );\n}\n\nconst mapStateToProps = ({ tasks: { taskList }, settings: { filterBy } }) => ({\n  taskList: (() => {\n    if (filterBy == undefined || filterBy === ALL) {\n      return taskList;\n    }\n\n    if (filterBy === COMPLETED) {\n      return taskList.filter((el) => el.status === DONE_TASK)\n    }\n\n    if (filterBy === CURRENT) {\n      return taskList.filter((el) => el.status === IN_PROCESS_TASK)\n    }\n  })()\n});\n\nexport default connect(mapStateToProps)(App);\n","import { nanoid } from 'nanoid';\r\nimport { ADD_TASK, REMOVE_TASK, CHANGE_TASK_STATUS, IN_PROCESS_TASK, DONE_TASK } from './taskActions';\r\n\r\nconst taskReducer = (state = { taskList: [] }, { type, payload }) => {\r\n  const { taskList } = state;\r\n\r\n  switch (type) {\r\n    case ADD_TASK: {\r\n      const id = nanoid();\r\n      return { ...state, taskList: [...taskList, { id, taskName: payload.taskName, status: IN_PROCESS_TASK }]};\r\n    }\r\n    case REMOVE_TASK: {\r\n      return { ...state, taskList: taskList.filter(({ id }) => id !== payload.id ) };\r\n    }\r\n\r\n    case CHANGE_TASK_STATUS: {\r\n      const task = taskList.find(({ id }) => id === payload.id);\r\n      task.status = task.status === IN_PROCESS_TASK ? DONE_TASK : IN_PROCESS_TASK;\r\n\r\n      return { ...state, taskList: [...taskList] };\r\n    }\r\n  }\r\n\r\n  return state;\r\n}\r\n\r\nexport default taskReducer;","import { ALL, CURRENT, COMPLETED, SEL_FILTER_VALUE, } from './settingsActions';\r\n\r\nconst settingsReducer = (state = { filterBy: ALL }, { type, payload }) => {\r\n  switch (type) {\r\n    case SEL_FILTER_VALUE: {\r\n      return { ...state, filterBy: payload };\r\n    }\r\n  }\r\n\r\n  return state;\r\n}\r\n\r\nexport default settingsReducer;","import { createStore, combineReducers } from 'redux';\r\nimport taskReducer from './taskReducer';\r\nimport settingsReducer from './settingsReducer';\r\nimport { nanoid } from 'nanoid';\r\n\r\nconst initState = { \r\n  tasks: {\r\n    taskList: [\r\n      {\r\n        id: nanoid(),\r\n        taskName: 'Добавление новой записи',\r\n        status: 'IN_PROCESS_TASK',\r\n      },\r\n      {\r\n        id: nanoid(),\r\n        taskName: 'Новая запись добавляет при условии, что её длина меньше N символов или равна ей',\r\n        status: 'IN_PROCESS_TASK',\r\n      },\r\n      {\r\n        id: nanoid(),\r\n        taskName: 'Отображение списка добавленных записей',\r\n        status: 'IN_PROCESS_TASK',\r\n      },\r\n      {\r\n        id: nanoid(),\r\n        taskName: 'Переключение статуса записи Выполнено / Невыполненный при клике на её название',\r\n        status: 'IN_PROCESS_TASK',\r\n      },\r\n      {\r\n        id: nanoid(),\r\n        taskName: 'Фильтрация по типу (все, выполненные, текущие)',\r\n        status: 'IN_PROCESS_TASK',\r\n      },\r\n      {\r\n        id: nanoid(),\r\n        taskName: 'Отображение счётчика выполненных и невыполненных задач',\r\n        status: 'IN_PROCESS_TASK',\r\n      },\r\n      {\r\n        id: nanoid(),\r\n        taskName: 'Использование хранилища (Redux, Mobx)',\r\n        status: 'IN_PROCESS_TASK',\r\n      },\r\n    ]\r\n}};\r\n\r\nconst store = createStore(combineReducers({ tasks: taskReducer, settings: settingsReducer }), initState);\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider as ReduxProvider } from 'react-redux';\nimport store from './redux';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ReduxProvider store={store}>\n      <App />\n    </ReduxProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}